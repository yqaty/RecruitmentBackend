// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "wwbstar07@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/applications": {
            "post": {
                "description": "create an application. Remember to submit data with form instead of json!!!",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "create an application for candidate.",
                "operationId": "create_application.",
                "parameters": [
                    {
                        "description": "application detail",
                        "name": "pkg.CreateAppOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.CreateAppOpts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.Application"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/applications/recruitment/{rid}": {
            "get": {
                "description": "get all applications by recruitmentId, can only be got by member, applications information included comments and interview selections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get all applications by recruitmentId.",
                "operationId": "get_all_applications.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pkg.Application"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/applications/{aid}": {
            "get": {
                "description": "get candidate's application by applicationId, candidate and member will see different views of application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get an application for candidate and member",
                "operationId": "get_application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.Application"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "put": {
                "description": "update candidate's application by applicationId, can only be modified by application's owner",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "update candidate's application by applicationId",
                "operationId": "update_application.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update application opts",
                        "name": "pkg.UpdateAppOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.UpdateAppOpts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.Application"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete candidate's application by applicationId, can only be deleted by application's owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "delete candidate's application by applicationId",
                "operationId": "delete_application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.Application"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/applications/{aid}/abandoned": {
            "put": {
                "description": "reject candidate's application by applicationId, can only be abandoned by member of the corresponding group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "reject candidate's application by applicationId,",
                "operationId": "reject_application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/applications/{aid}/file/{type}": {
            "get": {
                "description": "candidate/member download his/her answer file, can only be downloaded by application's owner or member of the corresponding group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "candidate/member download his/her answer file",
                "operationId": "donwload_answer_file.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "put": {
                "description": "candidate upload his/her answer file, can only be uploaded by application's owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "candidate upload his/her answer file",
                "operationId": "upload_answer_file.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/applications/{aid}/interview/{type}": {
            "get": {
                "description": "allocate application's group/team interview time, can only be modified by member of the corresponding group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "allocate application's group/team interview time.",
                "operationId": "set_application_interview_time.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "group",
                            "team"
                        ],
                        "type": "string",
                        "description": "group or team",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pkg.Interview"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "put": {
                "description": "allocate application's group/team interview time, can only be modified by member of the corresponding group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "allocate application's group/team interview time.",
                "operationId": "set_application_interview_time.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "group",
                            "team"
                        ],
                        "type": "string",
                        "description": "group or team",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "interview uid",
                        "name": "interview_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/applications/{aid}/resume": {
            "get": {
                "description": "get application's resume by applicationId, can only be got by member or application's owner",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "get application's resume by applicationId",
                "operationId": "get_resume.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/applications/{aid}/slots/{type}": {
            "put": {
                "description": "candidate select group/team interview time, to save time, this api will not check Whether slot number exceeds the limit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "candidate select group/team interview time.",
                "operationId": "select_interview_slots.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "group",
                            "team"
                        ],
                        "type": "string",
                        "description": "group or team",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/applications/{aid}/step": {
            "put": {
                "description": "get all applications by recruitmentId, can only be modified by member of the corresponding group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "set application step by applicationId.",
                "operationId": "set_application_step.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "application id",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "description": "create comment for applications, only can be created by member.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "create comment for application",
                "operationId": "create_comment.",
                "parameters": [
                    {
                        "description": "create comment opts",
                        "name": "pkg.CreateCommentOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.CreateCommentOpts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.Comment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/comments/{cid}": {
            "delete": {
                "description": "delete comment of application, only can be deleted by comment's owner.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comment"
                ],
                "summary": "delete comment of application",
                "operationId": "delete_comment.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "comment uid",
                        "name": "cid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/recruitments": {
            "get": {
                "description": "get pending(the most recent) recruitment, member can only get the recruitment's detail(include application, interviews) after join in.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recruitment"
                ],
                "summary": "get pending recruitment.",
                "operationId": "get_pending_recruitment.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.Recruitment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "post": {
                "description": "gcreate recruitment, only can be created by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recruitment"
                ],
                "summary": "create recruitment.",
                "operationId": "create_recruitment.",
                "parameters": [
                    {
                        "description": "create recruitment opts",
                        "name": "pkg.CreateRecOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.CreateRecOpts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.Recruitment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/recruitments/{rid}": {
            "get": {
                "description": "get recruitment, member can only get the recruitment's detail(include application, interviews) after join in.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recruitment"
                ],
                "summary": "get recruitment.",
                "operationId": "get_recruitment.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recruitment uid",
                        "name": "rid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.Recruitment"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "put": {
                "description": "update recruitment, only can be updated by admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recruitment"
                ],
                "summary": "update recruitment.",
                "operationId": "update_recruitment.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recruitment uid",
                        "name": "rid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update recruitment opts",
                        "name": "pkg.UpdateRecOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.UpdateRecOpts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/recruitments/{rid}/file/{group}/{type}": {
            "get": {
                "description": "upload recruitment file, such as written test.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recruitment"
                ],
                "summary": "download recruitment file, such as written test.",
                "operationId": "download_recruitment_file",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "put": {
                "description": "upload recruitment file, such as written test.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recruitment"
                ],
                "summary": "upload recruitment file, such as written test.",
                "operationId": "upload_recruitment_file",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/recruitments/{rid}/interviews/{name}": {
            "get": {
                "description": "get recruitment interviews, candidate can't see slotNumber and selectNumber of Interviews (will get interviews of groups or unique), guarantee slotNumber \u003e selectNumber",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interviews"
                ],
                "summary": "get recruitment interviews.",
                "operationId": "get_recruitment_interviews.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recruitment id",
                        "name": "rid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "web",
                            "lab",
                            "ai",
                            "game",
                            "mobile",
                            "android",
                            "ios",
                            "design",
                            "pm",
                            "unique"
                        ],
                        "type": "string",
                        "description": "pkg.Group",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/pkg.Interview"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "put": {
                "description": "get recruitment interviews, use PUt method to prevent resource are duplicated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interviews"
                ],
                "summary": "set recruitment interviews.",
                "operationId": "set_recruitment_interviews.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recruitment id",
                        "name": "rid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "web",
                            "lab",
                            "ai",
                            "game",
                            "mobile",
                            "android",
                            "ios",
                            "design",
                            "pm",
                            "unique"
                        ],
                        "type": "string",
                        "description": "pkg.Group or unique",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update interview info",
                        "name": "[]pkg.UpdateInterviewOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.UpdateInterviewOpts"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "post": {
                "description": "create recruitment interviews.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interviews"
                ],
                "summary": "create recruitment interviews.",
                "operationId": "create_recruitment_interviews.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recruitment id",
                        "name": "rid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "web",
                            "lab",
                            "ai",
                            "game",
                            "mobile",
                            "android",
                            "ios",
                            "design",
                            "pm",
                            "unique"
                        ],
                        "type": "string",
                        "description": "pkg.Group",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create interview opts",
                        "name": "[]pkg.CreateInterviewOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.CreateInterviewOpts"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete recruitment interviews.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "interviews"
                ],
                "summary": "delete recruitment interviews.",
                "operationId": "delete_recruitment_interviews.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "recruitment id",
                        "name": "rid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "web",
                            "lab",
                            "ai",
                            "game",
                            "mobile",
                            "android",
                            "ios",
                            "design",
                            "pm",
                            "unique"
                        ],
                        "type": "string",
                        "description": "pkg.Group or unique",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "delete interview opts",
                        "name": "[]pkg.DeleteInterviewOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pkg.DeleteInterviewOpts"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/recruitments/{rid}/stressTest": {
            "put": {
                "description": "set stress test start and end time.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recruitment"
                ],
                "summary": "set stress test start and end time.",
                "operationId": "set_stress_test_time",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/sms": {
            "post": {
                "description": "Send sms to user, include Accept, Reject, detailed information reference https://uniquestudio.feishu.cn/docx/Yh96d2DoyoCe6zxlR0ecSU5snDd?from=from_copylink",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sms"
                ],
                "summary": "Send sms",
                "operationId": "send_sms",
                "parameters": [
                    {
                        "description": "sms body params",
                        "name": "pkg.SendSMSOpts",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pkg.SendSMSOpts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/sms/code": {
            "post": {
                "description": "Send code to admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sms"
                ],
                "summary": "Send code",
                "operationId": "send_code",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "description": "Get members detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get members detail",
                "operationId": "get_members_detail",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common.JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/pkg.MembersDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "code is not 0 and msg not empty",
                        "schema": {
                            "$ref": "#/definitions/common.JSONResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.JSONResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "pkg.Application": {
            "type": "object",
            "properties": {
                "abandoned": {
                    "type": "boolean"
                },
                "answer": {
                    "type": "string"
                },
                "candidate_id": {
                    "description": "manytoone",
                    "type": "string"
                },
                "comments": {
                    "description": "onetomany",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "grade": {
                    "description": "pkg.Grade",
                    "type": "string"
                },
                "group": {
                    "description": "pkg.Group",
                    "allOf": [
                        {
                            "$ref": "#/definitions/pkg.Group"
                        }
                    ]
                },
                "institute": {
                    "type": "string"
                },
                "interview_allocations_group": {
                    "$ref": "#/definitions/pkg.Interview"
                },
                "interview_allocations_group_id": {
                    "type": "string"
                },
                "interview_allocations_team": {
                    "$ref": "#/definitions/pkg.Interview"
                },
                "interview_allocations_team_id": {
                    "type": "string"
                },
                "interview_selections": {
                    "description": "manytomany",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg.Interview"
                    }
                },
                "intro": {
                    "type": "string"
                },
                "is_quick": {
                    "type": "boolean"
                },
                "major": {
                    "type": "string"
                },
                "rank": {
                    "type": "string"
                },
                "recruitment_id": {
                    "description": "manytoone",
                    "type": "string"
                },
                "referrer": {
                    "type": "string"
                },
                "rejected": {
                    "type": "boolean"
                },
                "resume": {
                    "type": "string"
                },
                "step": {
                    "description": "pkg.Step",
                    "allOf": [
                        {
                            "$ref": "#/definitions/pkg.Step"
                        }
                    ]
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_detail": {
                    "description": "get from sso",
                    "allOf": [
                        {
                            "$ref": "#/definitions/pkg.UserDetail"
                        }
                    ]
                }
            }
        },
        "pkg.Comment": {
            "type": "object",
            "properties": {
                "application_id": {
                    "description": "manytoone",
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "evaluation": {
                    "$ref": "#/definitions/pkg.Evaluation"
                },
                "member_id": {
                    "description": "manytoone",
                    "type": "string"
                },
                "member_name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pkg.CreateAppOpts": {
            "type": "object"
        },
        "pkg.CreateCommentOpts": {
            "type": "object",
            "required": [
                "application_id"
            ],
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "evaluation": {
                    "$ref": "#/definitions/pkg.Evaluation"
                },
                "member_id": {
                    "type": "string"
                },
                "member_name": {
                    "type": "string"
                }
            }
        },
        "pkg.CreateInterviewOpts": {
            "type": "object",
            "required": [
                "date",
                "end",
                "period",
                "start"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "period": {
                    "$ref": "#/definitions/pkg.Period"
                },
                "start": {
                    "type": "string"
                }
            }
        },
        "pkg.CreateRecOpts": {
            "type": "object",
            "required": [
                "beginning",
                "deadline",
                "end",
                "name"
            ],
            "properties": {
                "beginning": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "pkg.DeleteInterviewOpts": {
            "type": "object",
            "required": [
                "iid"
            ],
            "properties": {
                "iid": {
                    "type": "string"
                }
            }
        },
        "pkg.Evaluation": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Good",
                "Normal",
                "Bad"
            ]
        },
        "pkg.Gender": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Male",
                "Female",
                "Oth"
            ]
        },
        "pkg.Group": {
            "type": "string",
            "enum": [
                "web",
                "lab",
                "ai",
                "game",
                "mobile",
                "android",
                "ios",
                "design",
                "pm",
                "unique"
            ],
            "x-enum-comments": {
                "Unique": "for team interview"
            },
            "x-enum-varnames": [
                "Web",
                "Lab",
                "Ai",
                "Game",
                "Mobile",
                "Android",
                "Ios",
                "Design",
                "Pm",
                "Unique"
            ]
        },
        "pkg.Interview": {
            "type": "object",
            "properties": {
                "applications": {
                    "description": "manytomany",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg.Application"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "name": {
                    "$ref": "#/definitions/pkg.Group"
                },
                "period": {
                    "$ref": "#/definitions/pkg.Period"
                },
                "recruitment_id": {
                    "description": "manytoone",
                    "type": "string"
                },
                "start": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pkg.MembersDetail": {
            "type": "object",
            "properties": {
                "statistics": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "pkg.Period": {
            "type": "string",
            "enum": [
                "morning",
                "afternoon",
                "evening"
            ],
            "x-enum-varnames": [
                "Morning",
                "Afternoon",
                "Evening"
            ]
        },
        "pkg.Recruitment": {
            "type": "object",
            "properties": {
                "applications": {
                    "description": "一个hr-\u003e简历 ;级联删除",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg.Application"
                    }
                },
                "beginning": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "group_details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "interviews": {
                    "description": "一个hr-\u003e面试 ;级联删除",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg.Interview"
                    }
                },
                "name": {
                    "type": "string"
                },
                "statistics": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "stress_test_end": {
                    "type": "string"
                },
                "stress_test_start": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "pkg.SMSType": {
            "type": "string",
            "enum": [
                "Accept",
                "Reject"
            ],
            "x-enum-varnames": [
                "Accept",
                "Reject"
            ]
        },
        "pkg.SendSMSOpts": {
            "type": "object",
            "required": [
                "current",
                "next",
                "type"
            ],
            "properties": {
                "aids": {
                    "description": "the applications will be sent sms",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "current": {
                    "description": "the application current step",
                    "allOf": [
                        {
                            "$ref": "#/definitions/pkg.Step"
                        }
                    ]
                },
                "meeting_id": {
                    "type": "string"
                },
                "next": {
                    "description": "the application next step",
                    "allOf": [
                        {
                            "$ref": "#/definitions/pkg.Step"
                        }
                    ]
                },
                "place": {
                    "description": "the next step(interview/test) place",
                    "type": "string"
                },
                "rest": {
                    "type": "string"
                },
                "time": {
                    "description": "the next step(interview/test) time",
                    "type": "string"
                },
                "type": {
                    "description": "the candidate status : Pass or Fail",
                    "allOf": [
                        {
                            "$ref": "#/definitions/pkg.SMSType"
                        }
                    ]
                }
            }
        },
        "pkg.Step": {
            "type": "string",
            "enum": [
                "SignUp",
                "WrittenTest",
                "GroupTimeSelection",
                "GroupInterview",
                "OnlineGroupInterview",
                "StressTest",
                "TeamTimeSelection",
                "TeamInterview",
                "OnlineTeamInterview",
                "Pass"
            ],
            "x-enum-comments": {
                "GroupInterview": "组面",
                "GroupTimeSelection": "组面时间选择",
                "OnlineGroupInterview": "在线组面",
                "OnlineTeamInterview": "在线群面",
                "Pass": "通过",
                "SignUp": "报名",
                "StressTest": "熬测",
                "TeamInterview": "群面",
                "TeamTimeSelection": "面试时间选择",
                "WrittenTest": "笔试"
            },
            "x-enum-varnames": [
                "SignUp",
                "WrittenTest",
                "GroupTimeSelection",
                "GroupInterview",
                "OnlineGroupInterview",
                "StressTest",
                "TeamTimeSelection",
                "TeamInterview",
                "OnlineTeamInterview",
                "Pass"
            ]
        },
        "pkg.UpdateAppOpts": {
            "type": "object"
        },
        "pkg.UpdateInterviewOpts": {
            "type": "object",
            "required": [
                "date",
                "end",
                "period",
                "start"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "period": {
                    "$ref": "#/definitions/pkg.Period"
                },
                "start": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "pkg.UpdateRecOpts": {
            "type": "object",
            "properties": {
                "beginning": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "rid": {
                    "type": "string"
                }
            }
        },
        "pkg.UserDetail": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/pkg.Gender"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "join_time": {
                    "type": "string"
                },
                "lark_union_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "pkg.UserDetailResp": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pkg.Application"
                    }
                },
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "$ref": "#/definitions/pkg.Gender"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "join_time": {
                    "type": "string"
                },
                "lark_union_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "飞书 doc",
        "url": "https://uniquestudio.feishu.cn/docx/Yh96d2DoyoCe6zxlR0ecSU5snDd?from=from_copylink"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "https://dev.back.recruitment2023.hustunique.com/",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "UniqueStudio Recruitment API",
	Description:      "This is API doc of UniqueStudio Recruitment. For more API information, please see https://app.apifox.com/project/2985744",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
